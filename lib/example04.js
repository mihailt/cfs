// Generated by CoffeeScript 1.6.1
(function() {
  var Loader, SampleApp, app, clamp, colors, randomInteger,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  randomInteger = function(min, max) {
    if (max == null) {
      max = 0;
    }
    return Math.floor(Math.random() * (max + 1 - min)) + min;
  };

  clamp = function(val, min, max) {
    var _ref;
    if (max < min) {
      _ref = [min, max], max = _ref[0], min = _ref[1];
    }
    return Math.max(min, Math.min(val, max));
  };

  colors = ['#1abc9c', '#2ecc71', '#3498db', '#9b59b6', '#34495e', '#f1c40f', '#d35400', '#e74c3c', '#7f8c8d'];

  Loader = (function() {

    function Loader(x, y, width, height, loaded) {
      this.x = x;
      this.y = y;
      this.width = width;
      this.height = height;
      this.color = colors[randomInteger(0, colors.length - 1)];
      this.setLoaded(loaded);
    }

    Loader.prototype.setLoaded = function(loaded) {
      return this.loaded = clamp(loaded, 0, 100);
    };

    Loader.prototype.draw = function(ctx) {
      ctx.fillStyle = this.color;
      return ctx.fillRect(this.x, this.y, (this.width / 100) * this.loaded, this.height);
    };

    return Loader;

  })();

  SampleApp = (function(_super) {

    __extends(SampleApp, _super);

    function SampleApp() {
      SampleApp.__super__.constructor.apply(this, arguments);
      this.loaded = 0;
      this.loader = new Loader(this.width / 4, this.height / 2, this.width / 2, 4, this.loaded);
    }

    SampleApp.prototype.update = function(dt) {
      this.loaded += 0.5;
      if (this.loaded > 100) {
        this.loaded = 0;
      }
      return this.loader.setLoaded(this.loaded);
    };

    SampleApp.prototype.draw = function() {
      this.ctx.clearRect(0, 0, this.width, this.height);
      return this.loader.draw(this.ctx);
    };

    return SampleApp;

  })(Splash.App);

  app = new SampleApp('canvas', 800, 600);

  window.onblur = function() {
    return app.stop();
  };

  window.onfocus = function() {
    return app.run();
  };

  app.run();

}).call(this);
